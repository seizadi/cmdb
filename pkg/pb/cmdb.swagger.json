{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "CMDB",
    "contact": {
      "name": "Soheil Eizadi",
      "url": "https://github.com/seizadi/cmdb",
      "email": "seizadi@gmail.com"
    },
    "version": "1.0"
  },
  "basePath": "/v1/",
  "paths": {
    "/app_configs": {
      "get": {
        "tags": [
          "AppConfigs"
        ],
        "summary": "Use this method to retrieve all the AppConfigs.",
        "operationId": "AppConfigsList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t",
            "name": "_order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t",
            "name": "_offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t",
            "name": "_limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t",
            "name": "_page_token",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "AppConfigs"
        ],
        "summary": "Use this method to create a AppConfig information.",
        "operationId": "AppConfigsCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbAppConfig"
            }
          }
        ],
        "responses": {}
      }
    },
    "/app_configs/{id}": {
      "get": {
        "tags": [
          "AppConfigs"
        ],
        "summary": "Use this method to read a AppConfig information by identifier.",
        "operationId": "AppConfigsRead",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "AppConfigs"
        ],
        "summary": "Use this method to update a AppConfig information.",
        "operationId": "AppConfigsUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbAppConfig"
            }
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "AppConfigs"
        ],
        "summary": "Use this method to delete a particular AppConfig.",
        "operationId": "AppConfigsDelete",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      },
      "patch": {
        "tags": [
          "AppConfigs"
        ],
        "summary": "Use this method to update a AppConfig information.",
        "operationId": "AppConfigsUpdate2",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbAppConfig"
            }
          }
        ],
        "responses": {}
      }
    },
    "/app_versions": {
      "get": {
        "tags": [
          "AppVersions"
        ],
        "summary": "Use this method to retrieve all the AppVersions.",
        "operationId": "AppVersionsList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t",
            "name": "_order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t",
            "name": "_offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t",
            "name": "_limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t",
            "name": "_page_token",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "AppVersions"
        ],
        "summary": "Use this method to create a AppVersion information.",
        "operationId": "AppVersionsCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbAppVersion"
            }
          }
        ],
        "responses": {}
      }
    },
    "/app_versions/{id}": {
      "get": {
        "tags": [
          "AppVersions"
        ],
        "summary": "Use this method to read a AppVersion information by identifier.",
        "operationId": "AppVersionsRead",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "AppVersions"
        ],
        "summary": "Use this method to update a AppVersion information.",
        "operationId": "AppVersionsUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbAppVersion"
            }
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "AppVersions"
        ],
        "summary": "Use this method to delete a particular AppVersion.",
        "operationId": "AppVersionsDelete",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      },
      "patch": {
        "tags": [
          "AppVersions"
        ],
        "summary": "Use this method to update a AppVersion information.",
        "operationId": "AppVersionsUpdate2",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbAppVersion"
            }
          }
        ],
        "responses": {}
      }
    },
    "/application_instances": {
      "get": {
        "tags": [
          "ApplicationInstances"
        ],
        "summary": "Use this method to retrieve all the ApplicationInstances.",
        "operationId": "ApplicationInstancesList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t",
            "name": "_order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t",
            "name": "_offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t",
            "name": "_limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t",
            "name": "_page_token",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "ApplicationInstances"
        ],
        "summary": "Use this method to create a ApplicationInstance information.",
        "operationId": "ApplicationInstancesCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbApplicationInstance"
            }
          }
        ],
        "responses": {}
      }
    },
    "/application_instances/{id}": {
      "get": {
        "tags": [
          "ApplicationInstances"
        ],
        "summary": "Use this method to read a ApplicationInstance information by identifier.",
        "operationId": "ApplicationInstancesRead",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "ApplicationInstances"
        ],
        "summary": "Use this method to update a ApplicationInstance information.",
        "operationId": "ApplicationInstancesUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbApplicationInstance"
            }
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "ApplicationInstances"
        ],
        "summary": "Use this method to delete a particular ApplicationInstance.",
        "operationId": "ApplicationInstancesDelete",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      },
      "patch": {
        "tags": [
          "ApplicationInstances"
        ],
        "summary": "Use this method to update a ApplicationInstance information.",
        "operationId": "ApplicationInstancesUpdate2",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbApplicationInstance"
            }
          }
        ],
        "responses": {}
      }
    },
    "/applications": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Use this method to retrieve all the Applications.",
        "operationId": "ApplicationsList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t",
            "name": "_order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t",
            "name": "_offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t",
            "name": "_limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t",
            "name": "_page_token",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "Use this method to create a Application information.",
        "operationId": "ApplicationsCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbApplication"
            }
          }
        ],
        "responses": {}
      }
    },
    "/applications/{id}": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Use this method to read a Application information by identifier.",
        "operationId": "ApplicationsRead",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "Applications"
        ],
        "summary": "Use this method to update a Application information.",
        "operationId": "ApplicationsUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbApplication"
            }
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "Applications"
        ],
        "summary": "Use this method to delete a particular Application.",
        "operationId": "ApplicationsDelete",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      },
      "patch": {
        "tags": [
          "Applications"
        ],
        "summary": "Use this method to update a Application information.",
        "operationId": "ApplicationsUpdate2",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbApplication"
            }
          }
        ],
        "responses": {}
      }
    },
    "/artifacts": {
      "get": {
        "tags": [
          "Artifacts"
        ],
        "summary": "Use this method to retrieve all the Artifacts.",
        "operationId": "ArtifactsList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t",
            "name": "_order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t",
            "name": "_offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t",
            "name": "_limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t",
            "name": "_page_token",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Artifacts"
        ],
        "summary": "Use this method to create a Artifact information.",
        "operationId": "ArtifactsCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbArtifact"
            }
          }
        ],
        "responses": {}
      }
    },
    "/artifacts/{id}": {
      "get": {
        "tags": [
          "Artifacts"
        ],
        "summary": "Use this method to read a Artifact information by identifier.",
        "operationId": "ArtifactsRead",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "Artifacts"
        ],
        "summary": "Use this method to update a Artifact information.",
        "operationId": "ArtifactsUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbArtifact"
            }
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "Artifacts"
        ],
        "summary": "Use this method to delete a particular Artifact.",
        "operationId": "ArtifactsDelete",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      },
      "patch": {
        "tags": [
          "Artifacts"
        ],
        "summary": "Use this method to update a Artifact information.",
        "operationId": "ArtifactsUpdate2",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbArtifact"
            }
          }
        ],
        "responses": {}
      }
    },
    "/chart_versions": {
      "get": {
        "tags": [
          "ChartVersions"
        ],
        "summary": "Use this method to retrieve all the ChartVersions.",
        "operationId": "ChartVersionsList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t",
            "name": "_order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t",
            "name": "_offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t",
            "name": "_limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t",
            "name": "_page_token",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "ChartVersions"
        ],
        "summary": "Use this method to create a ChartVersion information.",
        "operationId": "ChartVersionsCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbChartVersion"
            }
          }
        ],
        "responses": {}
      }
    },
    "/chart_versions/{id}": {
      "get": {
        "tags": [
          "ChartVersions"
        ],
        "summary": "Use this method to read a ChartVersion information by identifier.",
        "operationId": "ChartVersionsRead",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "ChartVersions"
        ],
        "summary": "Use this method to update a ChartVersion information.",
        "operationId": "ChartVersionsUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbChartVersion"
            }
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "ChartVersions"
        ],
        "summary": "Use this method to delete a particular ChartVersion.",
        "operationId": "ChartVersionsDelete",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      },
      "patch": {
        "tags": [
          "ChartVersions"
        ],
        "summary": "Use this method to update a ChartVersion information.",
        "operationId": "ChartVersionsUpdate2",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbChartVersion"
            }
          }
        ],
        "responses": {}
      }
    },
    "/cloud_providers": {
      "get": {
        "tags": [
          "CloudProviders"
        ],
        "summary": "Use this method to retrieve all the CloudProviders.",
        "operationId": "CloudProvidersList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t",
            "name": "_order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t",
            "name": "_offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t",
            "name": "_limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t",
            "name": "_page_token",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "CloudProviders"
        ],
        "summary": "Use this method to create a CloudProvider information.",
        "operationId": "CloudProvidersCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbCloudProvider"
            }
          }
        ],
        "responses": {}
      }
    },
    "/cloud_providers/{id}": {
      "get": {
        "tags": [
          "CloudProviders"
        ],
        "summary": "Use this method to read a CloudProvider information by identifier.",
        "operationId": "CloudProvidersRead",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "CloudProviders"
        ],
        "summary": "Use this method to update a CloudProvider information.",
        "operationId": "CloudProvidersUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbCloudProvider"
            }
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "CloudProviders"
        ],
        "summary": "Use this method to delete a particular CloudProvider.",
        "operationId": "CloudProvidersDelete",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      },
      "patch": {
        "tags": [
          "CloudProviders"
        ],
        "summary": "Use this method to update a CloudProvider information.",
        "operationId": "CloudProvidersUpdate2",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbCloudProvider"
            }
          }
        ],
        "responses": {}
      }
    },
    "/deployments": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "summary": "Use this method to retrieve all the Deployments.",
        "operationId": "DeploymentsList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t",
            "name": "_order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t",
            "name": "_offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t",
            "name": "_limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t",
            "name": "_page_token",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Deployments"
        ],
        "summary": "Use this method to create a Deployment information.",
        "operationId": "DeploymentsCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbDeployment"
            }
          }
        ],
        "responses": {}
      }
    },
    "/deployments/{id}": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "summary": "Use this method to read a Deployment information by identifier.",
        "operationId": "DeploymentsRead",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "Deployments"
        ],
        "summary": "Use this method to update a Deployment information.",
        "operationId": "DeploymentsUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbDeployment"
            }
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "Deployments"
        ],
        "summary": "Use this method to delete a particular Deployment.",
        "operationId": "DeploymentsDelete",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      },
      "patch": {
        "tags": [
          "Deployments"
        ],
        "summary": "Use this method to update a Deployment information.",
        "operationId": "DeploymentsUpdate2",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbDeployment"
            }
          }
        ],
        "responses": {}
      }
    },
    "/environments": {
      "get": {
        "tags": [
          "Environments"
        ],
        "summary": "Use this method to retrieve all the Environments.",
        "operationId": "EnvironmentsList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t",
            "name": "_order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t",
            "name": "_offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t",
            "name": "_limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t",
            "name": "_page_token",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Environments"
        ],
        "summary": "Use this method to create a Environment information.",
        "operationId": "EnvironmentsCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbEnvironment"
            }
          }
        ],
        "responses": {}
      }
    },
    "/environments/{id}": {
      "get": {
        "tags": [
          "Environments"
        ],
        "summary": "Use this method to read a Environment information by identifier.",
        "operationId": "EnvironmentsRead",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "Environments"
        ],
        "summary": "Use this method to update a Environment information.",
        "operationId": "EnvironmentsUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbEnvironment"
            }
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "Environments"
        ],
        "summary": "Use this method to delete a particular Environment.",
        "operationId": "EnvironmentsDelete",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      },
      "patch": {
        "tags": [
          "Environments"
        ],
        "summary": "Use this method to update a Environment information.",
        "operationId": "EnvironmentsUpdate2",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbEnvironment"
            }
          }
        ],
        "responses": {}
      }
    },
    "/kube_clusters": {
      "get": {
        "tags": [
          "KubeClusters"
        ],
        "summary": "Use this method to retrieve all the KubeClusters.",
        "operationId": "KubeClustersList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t",
            "name": "_order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t",
            "name": "_offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t",
            "name": "_limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t",
            "name": "_page_token",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "KubeClusters"
        ],
        "summary": "Use this method to create a KubeCluster information.",
        "operationId": "KubeClustersCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbKubeCluster"
            }
          }
        ],
        "responses": {}
      }
    },
    "/kube_clusters/{id}": {
      "get": {
        "tags": [
          "KubeClusters"
        ],
        "summary": "Use this method to read a KubeCluster information by identifier.",
        "operationId": "KubeClustersRead",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "KubeClusters"
        ],
        "summary": "Use this method to update a KubeCluster information.",
        "operationId": "KubeClustersUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbKubeCluster"
            }
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "KubeClusters"
        ],
        "summary": "Use this method to delete a particular KubeCluster.",
        "operationId": "KubeClustersDelete",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      },
      "patch": {
        "tags": [
          "KubeClusters"
        ],
        "summary": "Use this method to update a KubeCluster information.",
        "operationId": "KubeClustersUpdate2",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbKubeCluster"
            }
          }
        ],
        "responses": {}
      }
    },
    "/lifecycles": {
      "get": {
        "tags": [
          "Lifecycles"
        ],
        "summary": "Use this method to retrieve all the Lifecycles.",
        "operationId": "LifecyclesList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t",
            "name": "_order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t",
            "name": "_offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t",
            "name": "_limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t",
            "name": "_page_token",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Lifecycles"
        ],
        "summary": "Use this method to create a Lifecycle information.",
        "operationId": "LifecyclesCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbLifecycle"
            }
          }
        ],
        "responses": {}
      }
    },
    "/lifecycles/{id}": {
      "get": {
        "tags": [
          "Lifecycles"
        ],
        "summary": "Use this method to read a Lifecycle information by identifier.",
        "operationId": "LifecyclesRead",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "Lifecycles"
        ],
        "summary": "Use this method to update a Lifecycle information.",
        "operationId": "LifecyclesUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbLifecycle"
            }
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "Lifecycles"
        ],
        "summary": "Use this method to delete a particular Lifecycle.",
        "operationId": "LifecyclesDelete",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      },
      "patch": {
        "tags": [
          "Lifecycles"
        ],
        "summary": "Use this method to update a Lifecycle information.",
        "operationId": "LifecyclesUpdate2",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbLifecycle"
            }
          }
        ],
        "responses": {}
      }
    },
    "/manifest": {
      "post": {
        "tags": [
          "Manifest"
        ],
        "operationId": "ManifestManifestCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbManifestCreateRequest"
            }
          }
        ],
        "responses": {}
      }
    },
    "/manifest/config": {
      "post": {
        "tags": [
          "Manifest"
        ],
        "operationId": "ManifestManifestConfigCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbManifestConfigCreateRequest"
            }
          }
        ],
        "responses": {}
      }
    },
    "/networks": {
      "get": {
        "tags": [
          "Networks"
        ],
        "summary": "Use this method to retrieve all the Networks.",
        "operationId": "NetworksList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t",
            "name": "_order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t",
            "name": "_offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t",
            "name": "_limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t",
            "name": "_page_token",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Networks"
        ],
        "summary": "Use this method to create a Network information.",
        "operationId": "NetworksCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbNetwork"
            }
          }
        ],
        "responses": {}
      }
    },
    "/networks/{id}": {
      "get": {
        "tags": [
          "Networks"
        ],
        "summary": "Use this method to read a Network information by identifier.",
        "operationId": "NetworksRead",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "Networks"
        ],
        "summary": "Use this method to update a Network information.",
        "operationId": "NetworksUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbNetwork"
            }
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "Networks"
        ],
        "summary": "Use this method to delete a particular Network.",
        "operationId": "NetworksDelete",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      },
      "patch": {
        "tags": [
          "Networks"
        ],
        "summary": "Use this method to update a Network information.",
        "operationId": "NetworksUpdate2",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbNetwork"
            }
          }
        ],
        "responses": {}
      }
    },
    "/regions": {
      "get": {
        "tags": [
          "Regions"
        ],
        "summary": "Use this method to retrieve all the Regions.",
        "operationId": "RegionsList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t",
            "name": "_order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t",
            "name": "_offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t",
            "name": "_limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t",
            "name": "_page_token",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Regions"
        ],
        "summary": "Use this method to create a Region information.",
        "operationId": "RegionsCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbRegion"
            }
          }
        ],
        "responses": {}
      }
    },
    "/regions/{id}": {
      "get": {
        "tags": [
          "Regions"
        ],
        "summary": "Use this method to read a Region information by identifier.",
        "operationId": "RegionsRead",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "Regions"
        ],
        "summary": "Use this method to update a Region information.",
        "operationId": "RegionsUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbRegion"
            }
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "Regions"
        ],
        "summary": "Use this method to delete a particular Region.",
        "operationId": "RegionsDelete",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      },
      "patch": {
        "tags": [
          "Regions"
        ],
        "summary": "Use this method to update a Region information.",
        "operationId": "RegionsUpdate2",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbRegion"
            }
          }
        ],
        "responses": {}
      }
    },
    "/secrets": {
      "get": {
        "tags": [
          "Secrets"
        ],
        "summary": "Use this method to retrieve all the Secrets.",
        "operationId": "SecretsList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t",
            "name": "_order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t",
            "name": "_offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t",
            "name": "_limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t",
            "name": "_page_token",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Secrets"
        ],
        "summary": "Use this method to create a Secret information.",
        "operationId": "SecretsCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbSecret"
            }
          }
        ],
        "responses": {}
      }
    },
    "/secrets/{id}": {
      "get": {
        "tags": [
          "Secrets"
        ],
        "summary": "Use this method to read a Secret information by identifier.",
        "operationId": "SecretsRead",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "Secrets"
        ],
        "summary": "Use this method to update a Secret information.",
        "operationId": "SecretsUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbSecret"
            }
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "Secrets"
        ],
        "summary": "Use this method to delete a particular Secret.",
        "operationId": "SecretsDelete",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      },
      "patch": {
        "tags": [
          "Secrets"
        ],
        "summary": "Use this method to update a Secret information.",
        "operationId": "SecretsUpdate2",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbSecret"
            }
          }
        ],
        "responses": {}
      }
    },
    "/vaults": {
      "get": {
        "tags": [
          "Vaults"
        ],
        "summary": "Use this method to retrieve all the Vaults.",
        "operationId": "VaultsList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t",
            "name": "_order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t",
            "name": "_offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t",
            "name": "_limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t",
            "name": "_page_token",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Vaults"
        ],
        "summary": "Use this method to create a Vault information.",
        "operationId": "VaultsCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbVault"
            }
          }
        ],
        "responses": {}
      }
    },
    "/vaults/{id}": {
      "get": {
        "tags": [
          "Vaults"
        ],
        "summary": "Use this method to read a Vault information by identifier.",
        "operationId": "VaultsRead",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "Vaults"
        ],
        "summary": "Use this method to update a Vault information.",
        "operationId": "VaultsUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbVault"
            }
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "Vaults"
        ],
        "summary": "Use this method to delete a particular Vault.",
        "operationId": "VaultsDelete",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      },
      "patch": {
        "tags": [
          "Vaults"
        ],
        "summary": "Use this method to update a Vault information.",
        "operationId": "VaultsUpdate2",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cmdbVault"
            }
          }
        ],
        "responses": {}
      }
    },
    "/version": {
      "get": {
        "tags": [
          "Cmdb"
        ],
        "operationId": "CmdbGetVersion",
        "responses": {}
      }
    }
  },
  "definitions": {
    "cmdbAppConfig": {
      "type": "object",
      "title": "------------------------------------------------------------\nAppConfig represents a custom configuration for Application\n------------------------------------------------------------",
      "properties": {
        "application_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "config_yaml": {
          "type": "string",
          "title": "The custom configuration"
        },
        "description": {
          "type": "string",
          "title": "The description of the AppConfig"
        },
        "environment_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "id": {
          "description": "The resource identifier.",
          "type": "string",
          "readOnly": true
        },
        "lifecycle_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "title": "The name of the AppConfig"
        }
      }
    },
    "cmdbAppVersion": {
      "type": "object",
      "title": "--------------------------------------------------------------\nAppVersion represents a particular version of the Application\n--------------------------------------------------------------",
      "properties": {
        "application_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "chart_version": {
          "title": "ChartVersion referenced",
          "$ref": "#/definitions/cmdbChartVersion"
        },
        "chart_version_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "title": "The description of the AppVersion"
        },
        "environment_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "id": {
          "description": "The resource identifier.",
          "type": "string",
          "readOnly": true
        },
        "lifecycle_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "title": "The name of the AppVersion"
        }
      }
    },
    "cmdbApplication": {
      "type": "object",
      "title": "------------------------------------------------------\nApplication base resource that can be Deployed\n------------------------------------------------------",
      "properties": {
        "chart": {
          "type": "string",
          "title": "The Chart for the Application"
        },
        "config_yaml": {
          "type": "string",
          "title": "Custom configuration"
        },
        "description": {
          "type": "string",
          "title": "The description of the Application"
        },
        "id": {
          "description": "The resource identifier.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "The name of the Application"
        },
        "repo": {
          "type": "string",
          "title": "The repo e.g. GitHub for the Appliation"
        },
        "ticket_link": {
          "type": "string",
          "title": "The ticket link e.g. Jira link"
        }
      }
    },
    "cmdbApplicationInstance": {
      "type": "object",
      "title": "-----------------------------------------------------------------------\nApplicationInstance represents application instance deployed in an Environment\n-----------------------------------------------------------------------",
      "properties": {
        "app_version_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "application_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "chart_version": {
          "title": "ChartVersion for the ApplicationInstance",
          "$ref": "#/definitions/cmdbChartVersion"
        },
        "chart_version_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "config_yaml": {
          "type": "string",
          "title": "Custom configuration"
        },
        "deployment": {
          "title": "Deployment of this ApplicationInstance",
          "$ref": "#/definitions/cmdbDeployment"
        },
        "description": {
          "type": "string",
          "title": "The description of the ApplicationInstance"
        },
        "enable": {
          "type": "boolean",
          "format": "boolean",
          "title": "Enable/Disable ApplicationInstance from deployment"
        },
        "environment_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "id": {
          "description": "The resource identifier.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "The name of the ApplicationInstance"
        }
      }
    },
    "cmdbArtifact": {
      "type": "object",
      "title": "---------------------------------------------------------------------\nArtifact represents an element built by CI (e.g. resolved manifest)\n---------------------------------------------------------------------",
      "properties": {
        "chart_version_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "commit": {
          "type": "string",
          "title": "The commit Id of the Artifact in repo"
        },
        "description": {
          "type": "string",
          "title": "The description of the Artifact"
        },
        "id": {
          "description": "The resource identifier.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "The name of the Artifact"
        },
        "repo": {
          "type": "string",
          "title": "The repo which stores the Artifact"
        }
      }
    },
    "cmdbChartVersion": {
      "type": "object",
      "title": "-------------------------------------------------------------\nChartVersion represents a Chart Version for an Application\n-------------------------------------------------------------",
      "properties": {
        "application_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "title": "The description of the ChartVersion"
        },
        "id": {
          "description": "The resource identifier.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "The name of the ChartVersion"
        },
        "repo": {
          "type": "string",
          "title": "The repo of the ChartVersion"
        },
        "version": {
          "type": "string",
          "title": "The version of the ChartVersion"
        }
      }
    },
    "cmdbCloudProvider": {
      "type": "object",
      "title": "------------------------------------------------------------------------\nCloudProvider represents a particular Cloud Provider e.g. AWS or Azure\n------------------------------------------------------------------------",
      "properties": {
        "account": {
          "type": "string",
          "title": "Cloud Provider Account Number"
        },
        "description": {
          "type": "string",
          "title": "The description of the CloudProvider"
        },
        "id": {
          "description": "The resource identifier.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "The name of the CloudProvider"
        },
        "provider": {
          "title": "The Provider",
          "$ref": "#/definitions/cmdbProvider"
        },
        "regions": {
          "type": "array",
          "title": "Regions for the CloudProvider",
          "items": {
            "$ref": "#/definitions/cmdbRegion"
          }
        }
      }
    },
    "cmdbDeployment": {
      "type": "object",
      "title": "---------------------------------------------------------------------\nDeployment represents a particular ApplicationInstance running on Kubernetes\n---------------------------------------------------------------------",
      "properties": {
        "application_instance_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "artifact": {
          "title": "Artifact for resolved manifest used for the ApplicationInstance",
          "$ref": "#/definitions/cmdbArtifact"
        },
        "artifact_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "title": "The description of the Deployment"
        },
        "id": {
          "description": "The resource identifier.",
          "type": "string",
          "readOnly": true
        },
        "kube_cluster": {
          "title": "Kubernetes Cluster on which the ApplicationInstance is deployed",
          "$ref": "#/definitions/cmdbKubeCluster"
        },
        "kube_cluster_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "title": "The name of the Deployment"
        }
      }
    },
    "cmdbEnvironment": {
      "type": "object",
      "title": "-------------------------------------------------------------\nEnvironment owns a set of ApplicationInstances for Deployment\n-------------------------------------------------------------",
      "properties": {
        "app_config": {
          "type": "array",
          "title": "AppConfig",
          "items": {
            "$ref": "#/definitions/cmdbAppConfig"
          }
        },
        "app_version": {
          "type": "array",
          "title": "AppVersion",
          "items": {
            "$ref": "#/definitions/cmdbAppVersion"
          }
        },
        "application_instances": {
          "type": "array",
          "title": "ApplicationInstances in this Environment",
          "items": {
            "$ref": "#/definitions/cmdbApplicationInstance"
          }
        },
        "config_yaml": {
          "type": "string",
          "title": "Custom config for this Environment"
        },
        "description": {
          "type": "string",
          "title": "The description of the Environment"
        },
        "id": {
          "description": "The resource identifier.",
          "type": "string",
          "readOnly": true
        },
        "lifecycle_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "title": "The name of the Environment"
        }
      }
    },
    "cmdbKubeCluster": {
      "type": "object",
      "title": "------------------------------------------------------\nKubeCluster represents a Kubernetes Cluster\n------------------------------------------------------",
      "properties": {
        "description": {
          "type": "string",
          "title": "The description of the KubeCluster"
        },
        "id": {
          "description": "The resource identifier.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "The name of the KubeCluster"
        },
        "network_id": {
          "description": "The resource identifier.",
          "type": "string"
        }
      }
    },
    "cmdbLifecycle": {
      "properties": {
        "app_config": {
          "type": "array",
          "title": "AppConfig",
          "items": {
            "$ref": "#/definitions/cmdbAppConfig"
          }
        },
        "app_version": {
          "type": "array",
          "title": "AppVersion",
          "items": {
            "$ref": "#/definitions/cmdbAppVersion"
          }
        },
        "config_yaml": {
          "type": "string",
          "title": "Custom configuration"
        },
        "description": {
          "type": "string",
          "title": "The description of the Lifecycle"
        },
        "environments": {
          "type": "array",
          "title": "Evironments in this Lifecycle",
          "items": {
            "$ref": "#/definitions/cmdbEnvironment"
          }
        },
        "id": {
          "description": "The resource identifier.",
          "type": "string",
          "readOnly": true
        },
        "lifecycle_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "title": "The name of the Lifecycle"
        }
      }
    },
    "cmdbManifestConfigCreateRequest": {
      "type": "object",
      "properties": {
        "app_instance_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "env_skip_values": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional if you want to skip environment Values"
        },
        "lifecycle_skip_values": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional if you want to skip Lifecycle Values"
        }
      }
    },
    "cmdbManifestCreateRequest": {
      "type": "object",
      "properties": {
        "app_instance_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "env_skip_values": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional if you want to skip environment Values"
        },
        "lifecycle_skip_values": {
          "type": "boolean",
          "format": "boolean",
          "title": "Optional if you want to skip Lifecycle Values"
        }
      }
    },
    "cmdbNetwork": {
      "type": "object",
      "title": "------------------------------------------------------\nNetwork represents a particular AWS VPC\n------------------------------------------------------",
      "properties": {
        "description": {
          "type": "string",
          "title": "The description of the Network"
        },
        "id": {
          "description": "The resource identifier.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "The name of the Network"
        },
        "region_id": {
          "description": "The resource identifier.",
          "type": "string"
        }
      }
    },
    "cmdbProvider": {
      "type": "string",
      "default": "UNKNOWN_PROVIDER",
      "enum": [
        "UNKNOWN_PROVIDER",
        "AWS",
        "AZURE",
        "GCP",
        "EQUINIX"
      ]
    },
    "cmdbRegion": {
      "type": "object",
      "title": "--------------------------------------------------------------------\nRegion represents a particular Geo for Cloud Provider e.g. us-east-1\n--------------------------------------------------------------------",
      "properties": {
        "cloud_provider_id": {
          "description": "The resource identifier.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "title": "The description of the Region"
        },
        "id": {
          "description": "The resource identifier.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "The name of the Region"
        },
        "networks": {
          "type": "array",
          "title": "The Networks in a Region",
          "items": {
            "$ref": "#/definitions/cmdbNetwork"
          }
        }
      }
    },
    "cmdbSecret": {
      "type": "object",
      "title": "--------------------------------------------------------\nSecret represents confidential data stored in the Vault\n--------------------------------------------------------",
      "properties": {
        "description": {
          "type": "string",
          "title": "The description of the container"
        },
        "id": {
          "description": "The resource identifier.",
          "type": "string",
          "readOnly": true
        },
        "key": {
          "type": "string",
          "title": "The key value of secret (note: value is stored on kubernetes secret"
        },
        "name": {
          "type": "string",
          "title": "The name of the container"
        },
        "path": {
          "type": "string",
          "title": "The path on vault for the Secrets (e.g. /qa0-secrets)"
        },
        "type": {
          "type": "string",
          "title": "The type of secret (e.g. opaque, or tls)"
        },
        "vault_id": {
          "description": "The resource identifier.",
          "type": "string"
        }
      }
    },
    "cmdbVault": {
      "type": "object",
      "title": "------------------------------------------------------\nVault represents the store for keeping Secrets\n------------------------------------------------------",
      "properties": {
        "description": {
          "type": "string",
          "title": "The description of the vault"
        },
        "id": {
          "description": "The resource identifier.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "The name of the vault"
        },
        "secrets": {
          "type": "array",
          "title": "The list of Secrets stored against the path on vault",
          "items": {
            "$ref": "#/definitions/cmdbSecret"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ]
}