{{- $fullName := include "cmdb.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "cmdb.labels" . | nindent 4 }}
spec:
  {{- if not .Values.cmdb.autoscaling.enabled }}
  replicas: {{ .Values.cmdb.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cmdb.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.cmdb.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cmdb.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.cmdb.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cmdb.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.cmdb.podSecurityContext | nindent 8 }}
      initContainers:
        {{- if .Values.postgresql.enabled }}
        - name: init-database
          image: busybox
          command: ['sh', '-c', 'until nslookup {{ .Release.Name }}-postgresql; do echo waiting for cmdb database; sleep 10; done;']
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.cmdb.securityContext | nindent 12 }}
          image: "{{ .Values.cmdb.image.repository }}:{{ .Values.cmdb.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.cmdb.image.pullPolicy }}
          env:
          - name: "CMDB_LOGGING_LEVEL"
            value: {{ .Values.cmdb.logLevel }}
          - name: CMDB_DATABASE_USER
            valueFrom:
              configMapKeyRef:
                name: {{ $fullName }}
                key: CMDB_DATABASE_USER
          - name: CMDB_DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-postgresql
                key: postgresql-password
          - name: CMDB_DATABASE_NAME
            valueFrom:
              configMapKeyRef:
                name: {{ $fullName }}
                key: CMDB_DATABASE_NAME
          - name: CMDB_DATABASE_HOST
            valueFrom:
              configMapKeyRef:
                name: {{ $fullName }}
                key: CMDB_DATABASE_HOST
          - name: POSTGRES_PORT
            value: {{ .Values.postgresql.service.port | quote }}
          - name: CMDB_DATABASE_SSL
            value: {{ template "sslmode" . }}

          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8081
              protocol: TCP
            - containerPort: 9090
              name: grpc
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 10
          resources:
            {{- toYaml .Values.cmdb.resources | nindent 12 }}
      {{- with .Values.cmdb.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.cmdb.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.cmdb.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
